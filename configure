#!/bin/bash
# ManipulateAggregates local configuration generator
#
# Will generate a file called "make.vars" which contains
# local configuration parameters.

# Output file name
output=make.vars
commandlinesave="$@"

function python_dir {
$PYTHON << EOF
import os,sys
sys.stdout.write(os.path.dirname(os.__file__)+os.sep+'site-packages\\n')
EOF
}

# Default configuration options
PYTHON=$(which python)
PYTHONPREFIX=$(python_dir)
PREFIX=$(readlink -e "$(dirname $(which python))/../")
MODNAME="ManipulateAggregates"

function helptext {
cat << EOF
Will generate a file called "make.vars" which contains
local configuration parameters.

Usage:
configure --prefix PREFIX

Flags:
--prefix                the prefix for the executable files, i.e.,
                        the subdirectory "bin" should be in your PATH. Default:
                        the parent directory of your python executable, i.e.,
                        $PREFIX
--pythonprefix          the prefix for the python scripts, i.e.,
                        a directory in your PYTHONPATH. Default:
                        python <<< "import os,sys; sys.stdout.write(os.path.dirname(os.__file__)+os.sep+'site-packages\\n')"
                        i.e., $(python <<< "import os,sys; sys.stdout.write(os.path.dirname(os.__file__)+os.sep+'site-packages\\n')")
--python                will use the specified python interpreter.
                        Default: first in PATH (i.e. $PYTHON)
--modname               the name of the module as seen from Python, i.e., you would use import MODNAME
                        to import the module (and you provide MODNAME). Default: $MODNAME
EOF
}

function nospace {
if grep -q -E "\s" <<< "$1"
then
    echo "A path with spaces is not supported, sorry. Aborting." >&2
    echo "Bad path: $1" >&2
exit 101
fi
}

function notdef {
if [[ ! "$2" ]]
then
    echo "Flag $1 not defined, aborting." >&2
    exit 102
fi
}

#read in command line parameters
while [[ $# -gt 0 ]]
do
    case "$1" in
        --prefix)
            shift
            nospace "$1"
            PREFIX="$1"
        ;;
        --pythonprefix)
            shift
            nospace "$1"
            PYTHONPREFIX="$1"
        ;;
        --python)
            shift
            nospace "$1"
            PYTHON="$1"
        ;;
        --help)
            helptext
            exit 0
        ;;
        --modname)
            shift
            nospace "$1"
            MODNAME="$1"
        ;;
        *)
            helptext
            echo "Command line option $1 not known, aborting and printing help text."
            exit 100
        ;;
    esac
    shift
done

notdef --prefix "$PREFIX" 
notdef --pythonprefix "$PYTHONPREFIX" 
notdef --python "$PYTHON" 
notdef --modname "$MODNAME" 

echo "Using python:                 $PYTHON"
echo "Installing Python scripts to: $PYTHONPREFIX"
echo "Module will be named:         $MODNAME"
echo "Installing executables to:    $PREFIX/bin"

cat > $output << EOF
# This file was built as follows."
# $0 $commandlinesave

PYTHONPREFIX     := $PYTHONPREFIX
THISDIR          := $(pwd)
PYTHON           := $PYTHON
MODULENAME       := $MODNAME
PREFIX           := $PREFIX
EOF

exit 0
